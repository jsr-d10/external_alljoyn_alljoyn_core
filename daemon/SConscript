# Copyright 2010 - 2011, Qualcomm Innovation Center, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
# 

Import('env')
from os.path import basename

srcs = [ f for f in env.Glob('*.cc') + env.Glob('*.c') ]
bt_srcs = [ 'BTController.cc', 'BTTransport.cc', 'BTNodeDB.cc' ]

if env['OS_GROUP'] == "windows":
    srcs = [ f for f in srcs if basename(str(f)) not in ['DaemonUnixTransport.cc'] ]
elif env['OS'] == "darwin":
    srcs = [ f for f in srcs if basename(str(f)) not in bt_srcs ]

srcs = [ f for f in env.Glob('*.cc') + env.Glob('*.c')
         if not (env['OS_GROUP'] == 'windows' and (str(f).endswith('DaemonUnixTransport.cc') )) ]
daemon_objs = env.Object(srcs)
config_objs = env.Object(['ConfigDB.cc',
                          'ServiceDB.cc',
                          'PropertyDB.cc',
                          'PolicyDB.cc'])

# Select BlueZ or BM3 for bluetooth support
if env['OS'] == 'android_donut' or env['OS'] =="darwin":
    # Skip bluetooth
    #env.Append(CPPPATH=['bt_bm3'])
    #bm3_srcs, bm3_objs = env.SConscript('bt_bm3/SConscript')
    #daemon_objs.extend(env.Object(bm3_srcs) + bm3_objs)
    pass
elif env['OS_GROUP'] == "windows":
    win_srcs = env.SConscript('bt_windows/SConscript')
    daemon_objs.extend(env.Object(win_srcs))
    env.AppendUnique(LIBS = ['Bthprops'])
else:
    # Use BlueZ
    bz_srcs = env.SConscript('bt_bluez/SConscript')
    daemon_objs.extend(env.Object(bz_srcs))

# AllJoyn Daemon
progs = env.SConscript('${OS_GROUP}/SConscript', exports=['daemon_objs', 'config_objs'])

# AllJoyn Daemon test
tests = env.SConscript('test/SConscript', exports=['daemon_objs'])

# Return daemon and related tests
ret = progs + tests
Return('ret')
